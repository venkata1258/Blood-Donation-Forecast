# -*- coding: utf-8 -*-
"""Blood Donation Forecast.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jiJVl8fgvHpQBEteZh5LDuxCfl2dFDaA
"""

!pip install pandas scikit-learn matplotlib

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt

# Load the dataset (replace 'blood_donation.csv' with your actual file path)
data = pd.read_csv('/content/Give-Life-Predict-Blood-Donations-master/datasets/transfusion.data')

# Print the actual column names in the DataFrame to verify
print(data.columns)

# Separate features (X) and target variable (y)
# Use the actual column names from the DataFrame
X = data[['Recency (months)', 'Frequency (times)', 'Monetary (c.c. blood)', 'Time (months)']]  # Changed column names
y = data['whether he/she donated blood in March 2007']  # Changed column name

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the model (Logistic Regression)
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model's performance
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
print(classification_report(y_test, y_pred))

# Visualize predictions (optional)
plt.scatter(X_test['Recency (months)'], X_test['Monetary (c.c. blood)'], c=y_pred, cmap='viridis') # Changed column names
plt.xlabel('Recency (months)') # Changed column name
plt.ylabel('Monetary (c.c. blood)') # Changed column name
plt.title('Predicted Donations')
plt.show()